/* Ch20-1. 투포인터 */

/*
  * 투포인터 알고리즘 *

  - 일차원 배열에 두 개의 포인터를 두고 조작하는 알고리즘
  - 보통 연속적인 구간에 대한 계산을 할 때 많이 사용한다

  * 보통 구간합 문제가 많이 나온다

  - 다음 배열에서 합이 10인 수열의 수는 ? -
  7 1 3 5 1 4 2 2 8

  1. 먼저 포인터 2개가 첫 인덱스를 가리킨다.
     구간에 대한 합이 7이고, 구간합이 10인경우는 한개도 못찾음

  count = 0
  partialSum = 7
  P1 = 0
  P2 = 0

  2. 구간합이 10을 넘지 않아서 두번째 포인터를 1증가시키고
     해당 인덱스에 값을 구간합에 더해준다

  count = 0
  partialSum = 8
  P1 = 0
  P2 = 1

  3. 그래도 아직 10을 넘지 않아서 두 번째 포인터를 증가시킨다
     그렇게 되면 구간합이 11이 된다. 구간합이 10을 넘었기 때문에 반대로
     첫 번째 포인터를 증가시킨다. 증가시키면서 구간값에서 기존값을 빼준다

  count = 0
  partialSum = 4
  P1 = 1
  P2 = 2

  4. 이번엔 두 번째 포인터를 증가시킨다. 또한 구간합도 더해준다
     마찬가지로 또 두번째 포인터를 증가시킨다.
     이번에는 구간합이 10이 되었기 때문에 count 변수를 1증가시킨다

  count = 1
  partialSum = 10
  P1 = 1
  P2 = 4

  5. 이번에도 두 번째 포인터를 증가시킨다. 왜냐하면 다음 수가 0일수도 있기 때문이다
     하지만 14가 되었기 때문에 첫 번째 포인터를 증가시키고 구간합에서 값을 빼고
  
  count = 1
  partialSum = 14
  P1 = 2
  P2 = 5

  6. 한번 더 첫 번째 포인터를 증가시키면 10이 되니 count에 1을 증가시켜준다

  count = 2
  partialSum = 10
  P1 = 3
  P2 = 5

  7. 이런 방법으로 쭉 진행하다보면 결국 모든 포인터가 끝에 도달하게 된다.
  그렇게 되면 종료된다

  ** 정리 **

  - 어려운 개념은 아니지만 모를 때는 당하는 문제 유형
  - 백트래킹을 사용하거나 완전 탐색으로 풀려다가 시간 제한에 걸리는 경우가 많다.
  - 따라서 이런 유형도 있다고 알아두는 것이 좋다.
*/